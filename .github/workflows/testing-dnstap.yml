name: tests dnstap

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unbound:
    runs-on: ubuntu-22.04
    env:
      COLLECTOR_USER: runneradmin

    strategy:
      matrix:
        go-version: [ '1.19', '1.20' ]
        unbound: [ '1.16.0', '1.17.0' ]

        mode: [ 'tcp' ]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: build binary
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o go-dnscollector *.go

    - name: Deploy docker image
      run: |
        sudo docker run -d --network="host" --name=unbound --volume=$PWD/testsdata/unbound/unbound_${{ matrix.mode }}.conf:/opt/unbound/etc/unbound/unbound.conf:z -v /tmp/:/opt/unbound/etc/unbound/tmp/:z mvance/unbound:${{ matrix.unbound }}
        until (dig -p 5553 www.github.com @127.0.0.1 | grep NOERROR); do sleep 5.0; done

    - name: Test ${{ matrix.mode }}
      run: |
        sudo python3 -m pip install dnstap_pb fstrm dnspython
        sudo python3 -m pip install --upgrade protobuf
        sudo python3 -m unittest tests.dnsquery_dnstap${{ matrix.mode }} -v

  coredns:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        go-version: [ '1.19', '1.20' ]
        coredns: [ '1.9.4', '1.10.1' ]
        mode: [ 'tcp', 'unix' ]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: build binary
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o go-dnscollector *.go

    - name: Deploy coredns docker image
      run: |
        sudo docker run -d --network="host" --name=coredns -v $PWD/testsdata/:$PWD/testsdata/ -v /tmp/:/tmp/ coredns/coredns:${{ matrix.coredns }} -conf $PWD/testsdata/coredns/coredns_${{ matrix.mode }}.conf
        until (dig -p 5553 www.github.com @127.0.0.1 | grep NOERROR); do sleep 5.0; done

    - name: Test ${{ matrix.mode }}
      run: |
        sudo python3 -m pip install dnstap_pb fstrm dnspython
        sudo python3 -m pip install --upgrade protobuf
        sudo python3 -m unittest tests.dnsquery_dnstap${{ matrix.mode }} -v

  dnsdist:
    runs-on: ubuntu-22.04
    env:
      COLLECTOR_USER: pdns

    strategy:
      matrix:
        go-version: [ '1.19', '1.20' ]
        dnsdist: [ '17', '18' ]

        mode: [ 'dnstaptcp', 'dnstapunix' ]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: build binary
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o go-dnscollector *.go

    - name: add pdns user
      run: |
        sudo addgroup --system --gid 953 pdns
        sudo adduser --system --disabled-password --no-create-home -uid 953 --gid 953 pdns

    - name: Deploy dnsdist docker image
      run: |
        sudo docker run -d --network="host" --name=dnsdist --volume=$PWD/testsdata/powerdns/dnsdist_${{ matrix.mode }}.conf:/etc/dnsdist/conf.d/dnsdist.conf:z -v /tmp/:/tmp/ powerdns/dnsdist-${{ matrix.dnsdist }}
        until (dig -p 5553 www.github.com @127.0.0.1 | grep NOERROR); do sleep 5.0; done

    - name: Test ${{ matrix.mode }}
      run: |
        sudo python3 -m pip install dnstap_pb fstrm dnspython
        sudo python3 -m pip install --upgrade protobuf
        sudo -E python3 -m unittest tests.dnsquery_${{ matrix.mode }} -v
